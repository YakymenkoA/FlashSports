<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="CandyIcon.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>